---

# process the Dockerfile template
- name: process the Dockerfile template
  template:
    src: Dockerfile.jenkins
    dest: /vagrant/dockerfiles/jenkins-ci/Dockerfile

- name: build jenkins docker image if needed
  command: docker build --rm -t {{ jenkins_image }} /vagrant/dockerfiles/jenkins-ci/

# jenkins home on host which will be mapped to jenkins home on container.

- name: create jenkins home on host
  file:
    path: "{{ jenkins_home_host }}"
    state: directory

# run docker jenkins container
# TODO running this as root. see dockerfile
# bind-mounting /var/run/docker.sock from host to container in order to allow
# access to host's Docker Daemon from within container.

- name: run jenkins docker container
  docker_container:
    name: "{{ jenkins_container }}"
    image: "{{ jenkins_image }}"
    ports: "{{ jenkins_http_port }}:{{ jenkins_http_port }}"
    exposed: "{{ jenkins_http_port }}"
    recreate: true
    detach: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ jenkins_home_host }}:{{ jenkins_home }}"

# get IP of Jenkins container
# http://stackoverflow.com/a/33457976/682912

- name: query IP of client container
  shell: "docker exec jenkins-ci-container hostname -I"
  register: _container_query

# set ansible fact corresponding to jenkins IP address
# http://docs.ansible.com/ansible/set_fact_module.html
- name: get IP of query result
  set_fact:
    jenkins_ip: "{{ _container_query.stdout | regex_replace('\\s','') }}"

# wait until Jenkins has started
# http://stackoverflow.com/a/23957310/682912

- name: Wait untils Jenkins web API is available
  shell: curl --head --silent http://{{ jenkins_ip }}:{{ jenkins_http_port }}/cli/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 10
  delay: 5

