---

- name: create jenkins home on host
  file:
    path: "{{ jenkins_home_host }}"
    state: directory

# process the Dockerfile template
- name: send templated Dockerfile to Jenkins Home
  template:
    src: Dockerfile.jenkins
    dest: "{{ jenkins_home_host }}/Dockerfile"

# send plugin list
- copy:
    src: plugins.txt
    dest: "{{ jenkins_home_host }}/plugins.txt"

# send plugin list
- copy:
    src: plugin.sh
    dest:  "{{ jenkins_home_host }}/plugin.sh"

# jenkins home on host which will be mapped to jenkins home on container.

- name: build jenkins docker image if needed
  command: docker build --rm -t {{ jenkins_image }} {{ jenkins_home_host }}

# run docker jenkins container
# TODO running this as root. see dockerfile
# bind-mounting /var/run/docker.sock from host to container in order to allow
# access to host's Docker Daemon from within container.

- name: run jenkins docker container
  docker_container:
    name: "{{ jenkins_container }}"
    image: "{{ jenkins_image }}"
    ports: "{{ jenkins_http_port }}:{{ jenkins_http_port }}"
    exposed: "{{ jenkins_http_port }}"
    recreate: true
    detach: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ jenkins_home_host }}:{{ jenkins_home }}"

# this step sets a fact called container_ip pointing to jenkins IP
- include: ../includes/get-ip-of-docker-container.yml containername="{{ jenkins_container }}"
- include: ../includes/wait-until-jenkins-is-available.yml

