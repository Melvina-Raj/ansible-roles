# {{ ansible_managed }}
FROM ubuntu:16.04

# install common packages
RUN apt-get update -qqy
RUN apt-get install -y wget software-properties-common curl git openjdk-8-jdk-headless

# env vars
ENV JENKINS_HOME "{{ jenkins_home }}"
# prevent jenkins from running setup wizard
ENV JAVA_OPTS "-Djava.awt.headless=true -Dhudson.diyChunking=false -Djenkins.install.runSetupWizard=false"
ENV JENKINS_OPTS "--httpPort={{ jenkins_http_port }}"
# install Jenkins
RUN wget -q -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -
RUN sh -c 'echo deb http://pkg.jenkins-ci.org/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
RUN apt-get update -qqy --allow-unauthenticated
RUN apt-get install -y jenkins

# create jenkins folders
RUN mkdir -p $JENKINS_HOME $JENKINS_HOME/ref $JENKINS_HOME/jobs

# Global config for docker build steps
COPY org.jenkinsci.plugins.dockerbuildstep.DockerBuilder.xml $JENKINS_HOME

# Add Jenkins Plugins list
COPY plugins.txt $JENKINS_HOME/plugins.txt
COPY plugin.sh $JENKINS_HOME/plugin.sh

# Download Plugin HPIs to plugins folder
WORKDIR $JENKINS_HOME
RUN sh -c "$JENKINS_HOME/plugin.sh $JENKINS_HOME/plugins.txt"

# prevent jenkins from showing "unlock jenkins" dialog.
# http://stackoverflow.com/a/37172067/682912
RUN echo 2.7.1 > $JENKINS_HOME/jenkins.install.InstallUtil.lastExecVersion

# make jenkins home persistent so that it can
# survive even if container is restarted.
# NOTE: 
# any changes made to jenkins home after declaring it as VOLUME
# will be discarded.
# for this reason it has to be the last declaration.
# https://docs.docker.com/engine/reference/builder/#/volume
# VOLUME {{ jenkins_home }}

# Start Jenkins!
CMD exec java $JAVA_OPTS -jar /usr/share/jenkins/jenkins.war $JENKINS_OPTS
